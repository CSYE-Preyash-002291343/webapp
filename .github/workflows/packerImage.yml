name : packerImage Build

on:
  pull_request:
    branches:
        - main 
  workflow_dispatch:
  
jobs:
 test:
    runs-on: ubuntu-latest
  
    steps:
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-client
  
      - name: Start PostgreSQL service
        run: |
          sudo systemctl start postgresql.service
          sudo systemctl enable postgresql.service
          sudo systemctl status postgresql.service
  
      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 3; done
  
      - name: Create PostgreSQL user and database
        run: |
          sudo -u postgres psql -c "CREATE USER runner WITH SUPERUSER CREATEDB PASSWORD '${{ secrets.DB_PASS }}';"
          sudo -u postgres createdb ${{ secrets.DB_NAME }}
      
      - uses: actions/checkout@v2
  
      - name: Setup NodeJS Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'
  
      - name: Install dependencies
        run: npm install
  
      - name: Run tests
        env:
          DB_USER: ${{ secrets.DB_USER_GITHUB }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: 5432
        run: npm run test:DB -- --forceExit

 packer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Archieve the webapp
        run: |
          cd ..
          tar -czvf webapp.tar.gz webapp
        
      - name: AWS Credential Setup
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_VALUE }}
          aws-region: us-east-1

      - name: create .env file
        run: |
          echo "PORT=${{ secrets.PORT}}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT}}" >> .env

      - name: Packer Build
        run: |
          cd packer/
          packer init .        
          packer build -var 'Port=${{ secrets.PORT }}' -var 'db_user=${{ secrets.DB_USER }}' -var 'db_pass=${{ secrets.DB_PASS }}' -var 'db_name=${{ secrets.DB_NAME }}' -var 'amiUsers=${{ secrets.AWS_USER}}' -var 'aws_region=${{vars.REGION}}' -var 'source_ami=${{vars.AMI}}' -var 'subnet_id=${{vars.SUBNET}}' aws.pkr.hcl